sylius_shop_checkout_complete:
    path: /checkout/complete
    methods: [GET, PUT]
    defaults:
        _controller: open_marketplace.controller.order.order_controller:updateAction
        _sylius:
            event: complete
            flash: false
            template: '@SyliusShop/Checkout/complete.html.twig'
            repository:
                method: find
                arguments:
                - "expr:service('sylius.context.cart').getCart()"
            state_machine:
                graph: sylius_order_checkout
                transition: complete
            redirect:
                route: sylius_shop_order_pay
                parameters:
                    tokenValue: resource.tokenValue
            form:
                type: Sylius\Bundle\CoreBundle\Form\Type\Checkout\CompleteType
                options:
                    validation_groups: 'sylius_checkout_complete'
#            prefix: account/

sylius_shop_account_order_index:
    path: /account/orders
    methods: [GET]
    defaults:
        _controller: sylius.controller.order:indexAction
        _sylius:
            section: shop_account
            template: "@SyliusShop/Account/Order/index.html.twig"
            grid: open_marketplace_account_order

sylius_shop_account_order_show:
    path: /account/orders/{number}
    methods: [GET]
    defaults:
        _controller: open_marketplace.controller.order.order_controller:showAction
        _sylius:
            section: shop_account
            template: "@SyliusShop/Account/Order/show.html.twig"
            repository:
                method: findOneByNumberAndCustomer
                arguments:
                    - $number
                    - "expr:service('sylius.context.customer').getCustomer()"

sylius_shop_checkout_select_shipping:
    path: /checkout/select-shipping
    methods: [GET, PUT]
    defaults:
        _controller: sylius.controller.order:updateAction
        _sylius:
            event: select_shipping
            flash: false
            template: "Context/Shop/Checkout/selectShipping.html.twig"
            form: BitBag\OpenMarketplace\Form\Type\Checkout\SelectShippingType
            repository:
                method: findCartForSelectingShipping
                arguments:
                    - "expr:service('sylius.context.cart').getCart().getId()"
            state_machine:
                graph: sylius_order_checkout
                transition: select_shipping

sylius_shop_order_thank_you:
    path: /thank-you
    methods: [GET]
    defaults:
        _controller: open_marketplace.controller.order.order_controller:thankYouAction
        _sylius:
            template: "Context/Shop/Checkout/thankYou.html.twig"
