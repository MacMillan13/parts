<div>
    <div id="app">
        <div>
            <span>Find the part</span>
            ${ message }$
            <input type="text" v-model="search" @input="typingSearch($event)" placeholder="Part number, vin, auto">
            <button>Search</button>
        </div>
        <div>
            <div v-if="step == 1 && (autoList !== null || selectedAuto !== null)">
                <table class="table">
                    <thead>
                    <tr>
                        <th scope="col">Brand</th>
                        <th scope="col">Model designation</th>
                        <th scope="col">Year</th>
                        <th scope="col">Region</th>
                        <th scope="col">Steering</th>
                        <th scope="col">Transmission type</th>
                        <th scope="col">Sunroof</th>
                        <th scope="col">Navigation</th>
                        <th scope="col">Electronic Stability Control (VSA)</th>
                        <th scope="col">Door count</th>
                        <th scope="col">ABS</th>
                    </tr>
                    </thead>
                    <tbody>
                    <tr v-if="autoList !== null" v-for="auto in autoList" @click="getCatalog(auto)">
                        <td>${ auto.brand }$</td>
                        <td>${ auto.name }$</td>
                        <td>${ auto.year }$</td>
                        <td>${ auto.sales_region }$</td>
                        <td>${ auto.steering }$</td>
                        <td>${ auto.trans_type }$</td>
                        <td>${ auto.sunroof }$</td>
                        <td>${ auto.navigation }$</td>
                        <td>${ auto.vsa }$</td>
                        <td>${ auto.door_count }$</td>
                        <td>${ auto.abs }$</td>
                    </tr>
                    <tr v-if="selectedAuto !== null">
                        <td>${ selectedAuto.brand }$</td>
                        <td>${ selectedAuto.name }$</td>
                        <td>${ selectedAuto.year }$</td>
                        <td>${ selectedAuto.sales_region }$</td>
                        <td>${ selectedAuto.steering }$</td>
                        <td>${ selectedAuto.trans_type }$</td>
                        <td>${ selectedAuto.sunroof }$</td>
                        <td>${ selectedAuto.navigation }$</td>
                        <td>${ selectedAuto.vsa }$</td>
                        <td>${ selectedAuto.door_count }$</td>
                        <td>${ selectedAuto.abs }$</td>
                    </tr>
                    </tbody>
                </table>
            </div>
            <div v-if="step == 2 && autoCatalog !== null">
                <ul>
                    <li v-for="catalog in autoCatalog" @click="getCatalogGroup(catalog)">
                        ${ catalog.name }$
                    </li>
                </ul>
            </div>
            <div v-if="step == 3 && autoCatalogGroup !== null">
                <div class="container">
                    <div class="row">
                        <div class="col-sm-3">
                            <ul>
                                <li v-for="catalog in autoCatalog" @click="getCatalogGroup(catalog)">
                                    ${ catalog.name }$
                                </li>
                            </ul>
                        </div>
                        <div class="row col-sm-9">
                            <div v-for="partGroup in autoCatalogGroup" @click="getPartGroup(partGroup)"
                                 class="catalog-group-block col-sm-4 thumbnail">
                                <div>
                                    <img :src="partGroup.img" alt="Part's group" class="embed-responsive-item">
                                </div>
                                ${ partGroup.name }$
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div v-if="step == 4 && partSchema !== null">
                <div class="container">
                    <div class="row">
                        <div class="col-sm-5">
                            <ul class="part-group-ul">
                                <li v-for="(partGroup, keyPartGroup) in partSchema.unitedPartGroups ">
                                    <div class="part-block-position-number">
                                        <span>${ keyPartGroup }$</span>
{#                                        <span>${ partGroup }$</span>#}
                                    </div>
                                    <div v-for="(partBlock, keyPartBlock) in partGroup">
                                        <div>
                                            <span>${ keyPartBlock }$</span>
                                        </div>
                                        <div v-for="(partItem, keyPartItem) in partBlock">
                                            <div>
                                                <span>${ keyPartItem }$</span>
                                            </div>
                                            <div v-for="part in partItem">
                                                <div>
                                                    <span>${ part.code }$</span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </li>
                                {#                                <li v-for="partGroup in partSchema.partGroups"> #}
                                {#                                    <h2 class="group-title">${ partGroup.name }$</h2> #}
                                {#                                    <ul class="part-block-ul"> #}
                                {#                                        <li class="part-block" v-for="part in partGroup.parts"> #}
                                {#                                            <div class="part-block-position-number"> #}
                                {#                                                <span>${ part.positionNumber }$</span> #}
                                {#                                            </div> #}
                                {#                                            <div> #}
                                {#                                                <div> #}
                                {#                                                    <span>${ part.name }$</span> #}
                                {#                                                </div> #}
                                {#                                                <div> #}
                                {#                                                    <span>${ part.id }$</span> #}
                                {#                                                </div> #}
                                {#                                            </div> #}
                                {#                                        </li> #}
                                {#                                    </ul> #}
                                {#                                </li> #}
                            </ul>
                        </div>
                        <div class="col-sm-7">
                            <div id="part-image-block">
                                <img id="part-image" :src="partSchema.img" alt="schema">
                                <ul id="part-image-ul">
                                    <li v-for="position in partSchemaPositions">
                                        ${ position.number }$
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div>
            </div>
        </div>
    </div>
</div>

<style>
    h2, span, p {
        font-size: 16px;
    }

    ul {
        list-style-type: none;
        padding: 0;
    }

    li {
        padding: 10px;
    }

    img,
    video,
    iframe {
        max-inline-size: 100%;
        block-size: auto;
    }

    .part-group-ul li {
    }

    .part-group-ul {
        height: 70vh;
        overflow-x: hidden;
        overflow-y: auto;
        text-align: justify;
    }

    .part-block-ul li:first-child {
        border-top: 0.5px solid rgba(0, 64, 96, 0.48);
    }

    .part-block-ul li {
        display: flex;
        border-bottom: 0.5px solid rgba(0, 64, 96, 0.48);
    }

    .part-block-position-number {
        margin-right: 15px;
    }

    .group-title {
        text-transform: uppercase;
    }

    #part-image-block {
        display: flex;
        justify-content: center;
    }

    #part-image {
        max-width: 100%;
        max-height: 70vh;
        width: 100%;
    }

    .catalog-group-block {
        display: flex;
        flex-direction: column;
    }

    #part-image-ul {
        position: absolute;
        top: 0;
        left: 0;
        margin: 0;
        padding: 0;
        list-style: none;
    }
</style>

<script type="text/javascript">
  const {
    createApp,
    ref,
    onMounted
  } = Vue;

  createApp({
    delimiters: ['${', '}$'],
    data() {
      return {
        step: 0,
        vinCodeLength: 17,
        defaultDataApi: 'https://localhost:8000/api/v3/',
        autoList: null,
        autoCatalog: null,
        autoCatalogGroup: null,
        selectedAuto: null,
        partSchema: null,
        partSchemaPositions: null
      };
    },
    mounted() {
    },
    created() {
      const brand = this.getParameterFromUrl('brand');
      const catalog = this.getParameterFromUrl('catalog');
      const auto = this.getParameterFromUrl('auto');
      const group = this.getParameterFromUrl('group');

      this.auto = {
        catalogId: brand,
        id: auto
      };

      if (null !== brand && null !== auto && catalog == null && group == null) {

        const catalogParam = {
          id: catalog,
        };

        this.getCatalog(catalogParam);
      }

      if (null !== brand && null !== auto && null !== catalog) {

        const catalogParam = {
          id: catalog,
        };

        this.getCatalog(catalogParam, false);
        this.getCatalogGroup(catalogParam);
      }

      if (null !== brand && null !== auto && null !== group) {

        const groupParam = {
          id: group,
        };

        this.getPartGroup(groupParam);
      }
    },
    methods: {
      getParameterFromUrl(value) {
        const queryString = window.location.search;
        const urlParams = new URLSearchParams(queryString);
        return urlParams.get(value);
      },
      getRequestOptions(method) {
        return {
          method: method,
          headers: {
            'Content-Type': 'application/json',
            'Accept-Language': 'en'
          }
        };
      },
      async typingSearch() {
        if (this.search.length === this.vinCodeLength) {
          console.log('Might be vin');
          await this.getDataByVin(this.search);
        }
      },
      async getDataByVin(vinCode) {
        const response = await fetch(this.defaultDataApi + 'search/vin/' + vinCode, this.getRequestOptions('GET'));
        const responseJson = await response.json();

        if (false === responseJson.exactMatch) {
          this.autoList = responseJson.data[0].carList;
          this.autoList.forEach(element => {
            element.parameters.forEach(parameter => {
              element[parameter.key] = parameter.value;
            });
          });
        } else if (true === responseJson.exactMatch) {
          await this.getCatalog(responseJson.data);
        }

        this.step = 1;
      },
      async getCatalog(auto, setStep = true) {
        //TODO uncomment when will have API.
        // const response = await fetch(this.defaultDataApi + 'part/catalog/' + auto.catalogId + '/' + auto.id,
        //   this.getRequestOptions('GET'));
        const response = await fetch(this.defaultDataApi + 'part/catalog/skoda/c9c4f4d0fe26e3af5aa36af8c197b096',
          this.getRequestOptions('GET'));
        const responseJson = await response.json();
        this.autoCatalog = responseJson.data;
        this.selectedAuto = auto;
        if (setStep) {
          this.step = 2;
        }
      },
      async getCatalogGroup(catalog) {
        //TODO uncomment when will have API.
        // const response = await fetch(this.defaultDataApi + 'part/catalog/' + auto.catalogId + '/' + auto.id + '/' + catalog.id,
        //   this.getRequestOptions('GET'));
        const response = await fetch(this.defaultDataApi + 'part/catalog/skoda/c9c4f4d0fe26e3af5aa36af8c197b096/MfCfmoAw',
          this.getRequestOptions('GET'));
        const responseJson = await response.json();
        this.autoCatalogGroup = responseJson.data;
        this.step = 3;
      },
      async getPartGroup(partGroup) {
        // const response = await fetch(this.defaultDataApi + 'search/part/schema/' + this.selectedAuto.catalogId + '/'
        //   + this.selectedAuto.id + '/' + partGroup.id,
        //   this.getRequestOptions('GET'));
        const response = await fetch(this.defaultDataApi + 'search/part/schema/skoda/c9c4f4d0fe26e3af5aa36af8c197b096/MCPwn5qAMTAwOTXwn5qBNDYwMTAwOTgw8J-agjYxMjUzMfCflLA2MDc6MTAwOTU4MDU0NjAxMDA5ODDwn5CSNjA38J-QiTEwMDk1ODA1NDYwMTAwOTgw',
          this.getRequestOptions('GET'));
        const responseJson = await response.json();
        this.partSchema = responseJson.data;
        this.partSchemaPositions = this.partSchema.positions;
        this.unitUnits(this.partSchema);
        this.step = 4;
      },
      unitUnits(partSchema) {
        let parts = {};

        partSchema.partGroups.forEach(partGroup => {
          partGroup.parts.forEach(part => {
            if (parts[part.positionNumber] === undefined) {
              parts[part.positionNumber] = {};
            }
            if (parts[part.positionNumber][partGroup.name] === undefined) {
              parts[part.positionNumber][partGroup.name] = {};
            }
            if (parts[part.positionNumber][partGroup.name][part.name] === undefined) {
              parts[part.positionNumber][partGroup.name][part.name] = [];
            }

            parts[part.positionNumber][partGroup.name][part.name].push({
              'code': part.number
            });
          });
        });

        console.log(parts);

        this.partSchema.unitedPartGroups = parts;
      }
    },
    setup() {
      const message = ref('Hello vue!');

      onMounted(() => {
      });

      return {
        message,
        search: ''
      };
    }
  })
    .mount('#app');
</script>
